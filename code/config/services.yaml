# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    api_repository_config:
       api_url: 'https://www.magayo.com/api/results.php'
       api_key: 'mASBxwC2sUzjyTNRpS'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php,Interfaces}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Interfaces\IApiClient:
        class: App\Adapters\GuzzleHttpClientAdapter
        arguments:
            $config: '%api_repository_config%'

    api_repository:
        class: App\Repository\DrawApiRepository
        public: true

    api_repository_fallback:
        class: App\Repository\DrawFallbackApiRepository
        public: true

    App\Adapters\GuzzleHttpResponseAdapter:
        class: App\Adapters\GuzzleHttpResponseAdapter

    App\UseCases\GetDrawUseCase:
        public: true
        class: App\UseCases\GetDrawUseCase
        arguments:
            $drawApiRepository: '@api_repository'
            $drawFallbackApiRepository: '@api_repository_fallback'
            $drawDbRepository: '@App\Repository\DrawDbRepositoryInterface'
